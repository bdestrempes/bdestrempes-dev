---
import Tag from '@/components/Tag.astro'
import { Separator } from '@/components/ui/separator'
import { parseAuthors } from '@/lib/server-utils'
import { formatDate, readingTime } from '@/lib/utils'
import type { CollectionEntry } from 'astro:content'
import Link from './Link.astro'

type Props = {
  entry: CollectionEntry<'articles'>
}

const { entry } = Astro.props as {
  entry: CollectionEntry<'articles'>
}

const formattedDate = formatDate(entry.data.date)
const readTime = readingTime(entry.body!)
const authors = await parseAuthors(entry.data.authors ?? [])
const hasImage = !!entry.data.image
---

<div
  class="not-prose rounded-xl border p-4 transition-colors duration-300 ease-in-out hover:bg-secondary/50"
>
  <Link href={`/${entry.collection}/${entry.id}`} class="block">
    <!-- Top row -->
    <div class="mb-4 grid grid-cols-1 gap-3 sm:grid-cols-3 sm:gap-4">
      <h3 class="text-lg font-semibold">{entry.data.title}</h3>
      <p class="text-sm text-muted-foreground sm:col-span-2">{entry.data.description}</p>
    </div>

    <!-- Bottom row -->
    <div class="grid grid-cols-1 gap-3 sm:grid-cols-3 sm:gap-4">
      <div class="text-xs text-muted-foreground">
        <span>{formattedDate}</span>
        <Separator orientation="vertical" className="mx-2 inline-block h-4 align-middle" />
        <span>{readTime}</span>
      </div>

      {
        entry.data.tags && (
          <div class="mt-2 flex flex-wrap gap-2 sm:col-span-2 sm:mt-0 sm:justify-end">
            {entry.data.tags.map((tag) => (
              <Tag name={tag} />
            ))}
          </div>
        )
      }
    </div>
  </Link>
</div>
